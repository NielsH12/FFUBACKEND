/*
 * generated by Xtext 2.17.1
 */
package dk.sdu.ffu.pint.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import dk.sdu.ffu.pint.pint.Intermediary

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class PintGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		if (resource.allContents.filter(Intermediary).size <= 0){
			return
		}
		
		val intermediary = resource.allContents.filter(Intermediary).next
		
		/** Shield Generator **/
		fsa.generateFile('Shield.java', shieldGenerator.generate(intermediary, resource))
		
		/** Pint Generator **/
		fsa.generateFile('Pint.java', PintIntermediaryGenerator.generate(intermediary, resource))
		
		/** CapabilityHandler Generator**/
		fsa.generateFile('CapabilityHandler.java', capabilityHandlerGenerator.generate(intermediary, resource))
		
		/** PolicyHandler Generator**/
		fsa.generateFile('PolicyHandler.java', policyHandlerGenerator.generate(intermediary, resource))
		
		/** Intermediary Client Generator **/
		fsa.generateFile('IntermediaryClient.java', IntermediaryClientGenerator.generate(intermediary, resource))
		
		/** Entities Generator **/
		fsa.generateFile('Entities.java', entitiesGenerator.generate(intermediary, resource))
		
		/** Information Service Interface Generator **/
		fsa.generateFile('InformationServiceInterface.java', InformationServiceInterfaceGenerator.generate(intermediary, resource))
	}
}
